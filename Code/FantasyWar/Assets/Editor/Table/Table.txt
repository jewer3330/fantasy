/* !!auto gen do not change
 
 */

using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using SuperBoBo;

namespace Table
{
    public partial class {Name}
    {
	    
{Struct_Field}
{Member_Count}
        public {Struct_Name}()
        {
        }

        public {Struct_Name}({Struct_Construct_Params})
        {
{Struct_Construct_Assign}
        }
        public static Dictionary<{Key_Type}, {Struct_Name}> _datas = new Dictionary<{Key_Type}, {Struct_Name}>();
		public static bool loaded = false;
		public static  Dictionary<{Key_Type}, {Struct_Name}> datas
        {
            get
            {
				if(!loaded)
				{
				LoadBinFromResources();
				}
                return _datas;
            }
			
			set
			{
				_datas = value;
			}
        }
{LoadFromBinanry}		
{LoadFromString}
        public static void LoadFromResources()
        {           
			Clear();
			string path = "";
			TextAsset data = null;
            
				
					path = "{Path}.csv"; 
				
 				
           
                data = ResManager.Load(path) as TextAsset;
				if(data == null)
				{
				    Debug.LogError(path + " 不存在！！！！");
					#if UNITY_EDITOR
                    	UnityEditor.EditorApplication.isPaused = true;
					#endif
					return;
				}
                string text = data.text;
				if(string.IsNullOrEmpty(text))
				{
					
				    Debug.LogError(path + " 没有内容");
					#if UNITY_EDITOR
                    	UnityEditor.EditorApplication.isPaused = true;
					#endif
					return;
				}
                {Name}.LoadFromString(text);
        }

        public static void LoadBinFromResources()
        {           
			Clear();
			loaded = true;
			string path = "";
			TextAsset data = null;
            
				
					path = "{Path_Bin}.bytes"; 
				 
            
                data = ResManager.Load(path) as TextAsset;
				if(data == null)
				{
				    Debug.LogError(path + " 不存在！！！！");
					#if UNITY_EDITOR
                    	UnityEditor.EditorApplication.isPaused = true;
					#endif
					return;
				}
                byte [] text = data.bytes;
				if(text == null || text.Length == 0)
				{
					
				    Debug.LogError(path + " 没有内容");
					#if UNITY_EDITOR
                    	UnityEditor.EditorApplication.isPaused = true;
					#endif
					return;
				}
                {Name}.LoadFromBinanry(text);
        }

        public static void LoadFromStreaming()
        {
            try
            {
                string url = "{Path}.csv";
                string content = FileUtils.ReadStringFromStreaming(url);

                LoadFromString(content);
            }
            catch (Exception ex)
            {
                Debug.LogError(string.Format("表{Name}数据有误! ({0})",ex.Message));
            }
        }


		public static void UnLoad()
		{
			Clear();
		}
        public static void Clear()
        {
        	if(_datas != null && _datas.Count != 0)
            	_datas.Clear();
        }

{Contains}

{Get}

{Get_Field}
    }
}